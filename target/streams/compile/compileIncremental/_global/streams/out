[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 224 products, 16 sources, 1 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/mycode/DeZeroScala/step06.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step28.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step02.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step01.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step03.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step04.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/newStep.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step29V2.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step13V2.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step07.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step09.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step29.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step27.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/newStepV2.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step19.scala, ${BASE}/src/main/scala/mycode/DeZeroScala/step13.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/mycode/DeZeroScala/newStepV2.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/mycode/DeZeroScala/newStepV2.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(mycode.mycode.DeZeroScala.newStepV2.Variable, mycode.mycode.DeZeroScala.newStepV2.Cos, mycode.mycode.DeZeroScala.newStepV2.Sub, mycode.mycode.DeZeroScala.newStepV2.Div, mycode.mycode.DeZeroScala.newStepV2.Ln, mycode.mycode.DeZeroScala.newStepV2.Add, mycode.mycode.DeZeroScala.newStepV2.cos, mycode.mycode.DeZeroScala.newStepV2.Mul, mycode.mycode.DeZeroScala.newStepV2.Pow, mycode.mycode.DeZeroScala.newStepV2.Function, mycode.mycode.DeZeroScala.newStepV2, mycode.mycode.DeZeroScala.newStepV2.sin, mycode.mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(mycode.mycode.DeZeroScala.newStepV2.Variable, mycode.mycode.DeZeroScala.newStepV2.Cos, mycode.mycode.DeZeroScala.newStepV2.Sub, mycode.mycode.DeZeroScala.newStepV2.Div, mycode.mycode.DeZeroScala.newStepV2.Ln, mycode.mycode.DeZeroScala.newStepV2.Add, mycode.mycode.DeZeroScala.newStepV2.cos, mycode.mycode.DeZeroScala.newStepV2.Mul, mycode.mycode.DeZeroScala.newStepV2.Pow, mycode.mycode.DeZeroScala.newStepV2.Function, mycode.mycode.DeZeroScala.newStepV2, mycode.mycode.DeZeroScala.newStepV2.sin, mycode.mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/mycode/DeZeroScala/newStepV2.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Variable, mycode.mycode.DeZeroScala.newStepV2.Cos, mycode.mycode.DeZeroScala.newStepV2.Sub, mycode.mycode.DeZeroScala.newStepV2.Div, mycode.mycode.DeZeroScala.newStepV2.Ln, mycode.mycode.DeZeroScala.newStepV2.Add, mycode.mycode.DeZeroScala.newStepV2.cos, mycode.mycode.DeZeroScala.newStepV2.Mul, mycode.mycode.DeZeroScala.newStepV2.Pow, mycode.mycode.DeZeroScala.newStepV2.Function, mycode.mycode.DeZeroScala.newStepV2, mycode.mycode.DeZeroScala.newStepV2.sin, mycode.mycode.DeZeroScala.newStepV2.Sin[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.mycode.DeZeroScala.newStepV2.sin by mycode.mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /data/data/com.termux/files/home/ScalaCode/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.9.2:compile for Scala 2.12.18[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler b68ce63 for Scala compiler version 2.12.18[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/data/data/com.termux/files/home/.sbt/boot/scala-2.12.18/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/data/data/com.termux/files/home/ScalaCode/target/scala-2.12/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Ln...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Ln[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Ln)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Ln,ModifiedNames(changes = UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Ln;init;,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Ln has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Ln;init;,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Ln)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Pow...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Pow[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Pow)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Pow,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Pow;init;,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Pow has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Pow;init;,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Pow)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Div...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Div[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Div)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Div,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Div;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Div has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Div;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Div)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Mul...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Mul[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Mul)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Mul,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(Mul,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Mul;init;,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Mul has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(Mul,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Mul;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Mul)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Sub...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Sub[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Sub,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Sub;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Sub has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Sub;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.cos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.cos[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.cos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.cos,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(cos,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;cos;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.cos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(cos,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;cos;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.cos)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Add...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Add,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Add;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(Add,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Add has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Add;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(Add,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Cos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Cos[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Cos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Cos,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Cos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Cos)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.sin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.sin[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.sin,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;DeZeroScala;newStepV2;sin;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.sin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;DeZeroScala;newStepV2;sin;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.sin)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Sub...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Sub[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Sub,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Sub;init;,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Sub has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Sub;init;,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Ln...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Ln[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Ln)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Ln,ModifiedNames(changes = UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Ln;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Ln has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Ln;init;,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Ln)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Div...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Div[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Div)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Div,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Div;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Div has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Div;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Div)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2,ModifiedNames(changes = UsedName(main,[Default]), UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(get_dot_graph$default$2,[Default]), UsedName(rand,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(y_grad_creator,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(cos,[Default]), UsedName(Mul,[Default]), UsedName(executionStart,[Default]), UsedName(notifyAll,[Default]), UsedName(x,[Default]), UsedName(Cal,[Default]), UsedName(newStepV2,[Default]), UsedName(get_dot_graph_for_single,[Default]), UsedName(args,[Default]), UsedName(Add,[Default]), UsedName(z,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(Variable,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(get_dot_graph,[Default]), UsedName(Sin,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(main,[Default]), UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(get_dot_graph$default$2,[Default]), UsedName(rand,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(y_grad_creator,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(cos,[Default]), UsedName(Mul,[Default]), UsedName(executionStart,[Default]), UsedName(notifyAll,[Default]), UsedName(x,[Default]), UsedName(Cal,[Default]), UsedName(newStepV2,[Default]), UsedName(get_dot_graph_for_single,[Default]), UsedName(args,[Default]), UsedName(Add,[Default]), UsedName(z,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(Variable,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(get_dot_graph,[Default]), UsedName(Sin,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Sin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Sin[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Sin,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(Sin,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Sin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(Sin,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Function...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Pow by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.sin by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Mul by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.cos by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Ln by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Add by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Div by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding mycode.DeZeroScala.newStepV2.Sub by mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Pow, mycode.DeZeroScala.newStepV2.sin, mycode.DeZeroScala.newStepV2.Mul, mycode.DeZeroScala.newStepV2.cos, mycode.DeZeroScala.newStepV2.Function, mycode.DeZeroScala.newStepV2.Ln, mycode.DeZeroScala.newStepV2.Add, mycode.DeZeroScala.newStepV2.Div, mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Function,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Function;init;,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 9 classes due to The mycode.DeZeroScala.newStepV2.Function has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Function;init;,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Pow, mycode.DeZeroScala.newStepV2.sin, mycode.DeZeroScala.newStepV2.Mul, mycode.DeZeroScala.newStepV2.cos, mycode.DeZeroScala.newStepV2.Function, mycode.DeZeroScala.newStepV2.Ln, mycode.DeZeroScala.newStepV2.Add, mycode.DeZeroScala.newStepV2.Div, mycode.DeZeroScala.newStepV2.Sub)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Pow...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Pow[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Pow)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Pow,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Pow;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Pow has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Pow;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Pow)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Sin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Sin[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Sin,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(Sin,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Sin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(Sin,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Sin)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Variable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Variable[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Variable)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Variable,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(\\\,[Default]), UsedName(<init>$default$5,[Default]), UsedName(creator,[Default]), UsedName(ne,[Default]), UsedName(apply$default$5,[Default]), UsedName(set_grad,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isConstant,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$1,[Default]), UsedName(lnlnln,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(data,[Default]), UsedName(ID,[Default]), UsedName(unapply,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$4,[Default]), UsedName(^,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(***,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(/,[Default]), UsedName(sin,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Variable;init;,[Default]), UsedName(*,[Default]), UsedName(notify,[Default]), UsedName(ln,[Default]), UsedName(isInput,[Default]), UsedName(cos,[Default]), UsedName(---,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(backward,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(^^^,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$4,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(curried,[Default]), UsedName(+,[Default]), UsedName(productElement,[Default]), UsedName(+++,[Default]), UsedName(copy$default$5,[Default]), UsedName($init$,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(<init>$default$3,[Default]), UsedName(Variable,[Default]), UsedName(-,[Default]), UsedName(equals,[Default]), UsedName(grad,[Default]), UsedName(getClass,[Default]), UsedName(productPrefix,[Default]), UsedName(name,[Default]), UsedName(<init>$default$1,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Variable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(\\\,[Default]), UsedName(<init>$default$5,[Default]), UsedName(creator,[Default]), UsedName(ne,[Default]), UsedName(apply$default$5,[Default]), UsedName(set_grad,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isConstant,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$1,[Default]), UsedName(lnlnln,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(data,[Default]), UsedName(ID,[Default]), UsedName(unapply,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$4,[Default]), UsedName(^,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(***,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(/,[Default]), UsedName(sin,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Variable;init;,[Default]), UsedName(*,[Default]), UsedName(notify,[Default]), UsedName(ln,[Default]), UsedName(isInput,[Default]), UsedName(cos,[Default]), UsedName(---,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(backward,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(^^^,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$4,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(curried,[Default]), UsedName(+,[Default]), UsedName(productElement,[Default]), UsedName(+++,[Default]), UsedName(copy$default$5,[Default]), UsedName($init$,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(<init>$default$3,[Default]), UsedName(Variable,[Default]), UsedName(-,[Default]), UsedName(equals,[Default]), UsedName(grad,[Default]), UsedName(getClass,[Default]), UsedName(productPrefix,[Default]), UsedName(name,[Default]), UsedName(<init>$default$1,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Variable)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Variable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Variable[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Variable)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Variable,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(\\\,[Default]), UsedName(<init>$default$5,[Default]), UsedName(creator,[Default]), UsedName(ne,[Default]), UsedName(apply$default$5,[Default]), UsedName(set_grad,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isConstant,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$1,[Default]), UsedName(lnlnln,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Variable;init;,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(data,[Default]), UsedName(ID,[Default]), UsedName(unapply,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$4,[Default]), UsedName(^,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(***,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(/,[Default]), UsedName(sin,[Default]), UsedName(*,[Default]), UsedName(notify,[Default]), UsedName(ln,[Default]), UsedName(isInput,[Default]), UsedName(cos,[Default]), UsedName(---,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(backward,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(^^^,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$4,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(curried,[Default]), UsedName(+,[Default]), UsedName(productElement,[Default]), UsedName(+++,[Default]), UsedName(copy$default$5,[Default]), UsedName($init$,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(<init>$default$3,[Default]), UsedName(Variable,[Default]), UsedName(-,[Default]), UsedName(equals,[Default]), UsedName(grad,[Default]), UsedName(getClass,[Default]), UsedName(productPrefix,[Default]), UsedName(name,[Default]), UsedName(<init>$default$1,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Variable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(apply$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(\\\,[Default]), UsedName(<init>$default$5,[Default]), UsedName(creator,[Default]), UsedName(ne,[Default]), UsedName(apply$default$5,[Default]), UsedName(set_grad,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isConstant,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$1,[Default]), UsedName(lnlnln,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Variable;init;,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(data,[Default]), UsedName(ID,[Default]), UsedName(unapply,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$4,[Default]), UsedName(^,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(***,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$4,[Default]), UsedName(/,[Default]), UsedName(sin,[Default]), UsedName(*,[Default]), UsedName(notify,[Default]), UsedName(ln,[Default]), UsedName(isInput,[Default]), UsedName(cos,[Default]), UsedName(---,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(backward,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(^^^,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$4,[Default]), UsedName(copy$default$3,[Default]), UsedName(productIterator,[Default]), UsedName(curried,[Default]), UsedName(+,[Default]), UsedName(productElement,[Default]), UsedName(+++,[Default]), UsedName(copy$default$5,[Default]), UsedName($init$,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(<init>$default$3,[Default]), UsedName(Variable,[Default]), UsedName(-,[Default]), UsedName(equals,[Default]), UsedName(grad,[Default]), UsedName(getClass,[Default]), UsedName(productPrefix,[Default]), UsedName(name,[Default]), UsedName(<init>$default$1,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Variable)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.cos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.cos[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.cos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.cos,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(cos,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;DeZeroScala;newStepV2;cos;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.cos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(cos,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(mycode;DeZeroScala;newStepV2;cos;init;,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.cos)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Function...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Function[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Function,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Function;init;,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Function has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Function;init;,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2,ModifiedNames(changes = UsedName(main,[Default]), UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(get_dot_graph$default$2,[Default]), UsedName(rand,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(y_grad_creator,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(cos,[Default]), UsedName(Mul,[Default]), UsedName(executionStart,[Default]), UsedName(notifyAll,[Default]), UsedName(x,[Default]), UsedName(Cal,[Default]), UsedName(newStepV2,[Default]), UsedName(get_dot_graph_for_single,[Default]), UsedName(args,[Default]), UsedName(Add,[Default]), UsedName(z,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(Variable,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(get_dot_graph,[Default]), UsedName(Sin,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(main,[Default]), UsedName(==,[Default]), UsedName(Ln,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(Pow,[Default]), UsedName(ne,[Default]), UsedName(get_dot_graph$default$2,[Default]), UsedName(rand,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Sub,[Default]), UsedName(##,[Default]), UsedName(Div,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(y_grad_creator,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(cos,[Default]), UsedName(Mul,[Default]), UsedName(executionStart,[Default]), UsedName(notifyAll,[Default]), UsedName(x,[Default]), UsedName(Cal,[Default]), UsedName(newStepV2,[Default]), UsedName(get_dot_graph_for_single,[Default]), UsedName(args,[Default]), UsedName(Add,[Default]), UsedName(z,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(Variable,[Default]), UsedName(Function,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(get_dot_graph,[Default]), UsedName(Sin,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.Mul...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.Mul[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.Mul)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.Mul,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Mul;init;,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(Mul,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.Mul has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;Mul;init;,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(Mul,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.Mul)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Add...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Add,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Add;init;,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(Add,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Add has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(mycode;DeZeroScala;newStepV2;Add;init;,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(Add,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.DeZeroScala.newStepV2.Cos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.DeZeroScala.newStepV2.Cos[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.DeZeroScala.newStepV2.Cos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.DeZeroScala.newStepV2.Cos,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.DeZeroScala.newStepV2.Cos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(Cos,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.DeZeroScala.newStepV2.Cos)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycode.mycode.DeZeroScala.newStepV2.sin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: mycode.mycode.DeZeroScala.newStepV2.sin[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycode.mycode.DeZeroScala.newStepV2.sin)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycode.mycode.DeZeroScala.newStepV2.sin,ModifiedNames(changes = UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;sin;init;,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The mycode.mycode.DeZeroScala.newStepV2.sin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(mycode;mycode;DeZeroScala;newStepV2;sin;init;,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ID,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]), UsedName(sin,[Default]), UsedName(notify,[Default]), UsedName(output,[Default]), UsedName(notifyAll,[Default]), UsedName(backwardA,[Default]), UsedName(backwardB,[Default]), UsedName(forward,[Default]), UsedName(wait,[Default]), UsedName(inputA,[Default]), UsedName(inputB,[Default]), UsedName(equals,[Default]), UsedName(y,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(mycode.mycode.DeZeroScala.newStepV2.sin)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.707972693 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
